// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.EF;

#nullable disable

namespace webapi.EF.Migrations
{
    [DbContext(typeof(WebApiContext))]
    [Migration("20250527145943_Add_SeedData")]
    partial class Add_SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi.EF.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<byte>("WorkTypeId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LocationId");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("Contact", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3351cd6-bd41-4892-8629-4404fa6f46a8"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "juan@example.com",
                            FullName = "Juan Dela Cruz",
                            IsDeleted = false,
                            LocationId = new Guid("f27c04d5-53e7-4962-9d68-604034a044c7"),
                            MobileNumber = "09171234567",
                            WorkTypeId = (byte)1
                        });
                });

            modelBuilder.Entity("webapi.EF.Models.EnumWorkType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("enum.Work.Type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Name = "Engineer"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Designer"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("webapi.EF.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Location", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f27c04d5-53e7-4962-9d68-604034a044c7"),
                            City = "Cebu City",
                            Country = "Philippines",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5cd999ba-d860-4071-8132-375fe49f27f1"),
                            City = "Davao City",
                            Country = "Philippines",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("webapi.EF.Models.Contact", b =>
                {
                    b.HasOne("webapi.EF.Models.Location", "Location")
                        .WithMany("Contacts")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Contact_Location");

                    b.HasOne("webapi.EF.Models.EnumWorkType", "WorkType")
                        .WithMany("Contacts")
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Contact_enum.Work.Type");

                    b.Navigation("Location");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("webapi.EF.Models.EnumWorkType", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("webapi.EF.Models.Location", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
